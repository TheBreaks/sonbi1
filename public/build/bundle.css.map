{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\Player.svelte",
    "..\\..\\Visualizer.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Player from './Player.svelte';\n\timport '@fortawesome/fontawesome-free/js/fontawesome.min.js';\n\timport '@fortawesome/fontawesome-free/js/solid.min.js';\n</script>\n<main>\n\t<Player/>\n</main>\n<style>\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: 960px;\n\t\t\tmargin: 0 auto;\n\t\t}\n\t}\n</style>",
    "<script>\r\n\timport { onMount } from 'svelte';\r\n\timport Visualizer from './Visualizer.svelte';\r\n\r\n\tlet audio;\r\n\tlet audio_ctx;\r\n\tlet media_source;\r\n\tlet time = 0;\r\n\tlet duration;\r\n\tlet paused = true;\r\n\tlet volume = 0.5;\r\n\tlet volume_save = volume;\r\n\tlet mute = false;\r\n\tlet loop = false;\r\n\tlet shuffle = false;\r\n\tlet viz = false;\r\n\r\n\tlet folder = \"sounds\";\r\n\tlet sounds = [];\r\n\r\n\tlet current_sound_index = 0;\r\n\t$: current_sound = (sounds != null && sounds[current_sound_index] != null) \r\n\t\t? sounds[current_sound_index] \r\n\t\t: \"\";\r\n\t$: current_sound_src = (sounds != null && sounds[current_sound_index] != null) \r\n\t\t? folder + \"/\" + sounds[current_sound_index] \r\n\t\t: \"\";\r\n\r\n\tlet touch_screenX;\r\n\tlet touch_screenY;\r\n\tlet touch_clientX;\r\n\tlet touch_clientY;\r\n\tlet touch_target;\r\n\r\n\tonMount(() => {\r\n\t\tfetch('playlist.json')\r\n\t\t.then((resp) => resp.json())\r\n\t\t.then(function(response){\r\n\t\t\tsounds = response.songs;\r\n\t\t\tif(sounds[current_sound_index] != null){\r\n\t\t\t\taudio = document.getElementById('audio');\r\n\t\t\t\taudio.src = folder + \"/\" + sounds[current_sound_index];\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tfunction init_audio_context(){\r\n\t\tlet options = { sampleRate: 44100 }; // defaut sampleRate : 48000 vs 44100 for mp3\r\n\t\taudio_ctx = new (window.AudioContext || window.webkitAudioContext)(options);\r\n\t\t// console.log(audio_ctx.sampleRate);\r\n\t\tmedia_source = audio_ctx.createMediaElementSource(audio);\r\n\t\tmedia_source.connect(audio_ctx.destination);\r\n\t}\r\n\r\n\tfunction toggle_play_pause(){\r\n\t\tpaused = !paused;\r\n\t}\r\n\r\n\tfunction stop(){\r\n\t\taudio.pause();\r\n\t\taudio.currentTime = 0;\r\n\t}\r\n\r\n\tfunction previous_sound(){\r\n\t\tcurrent_sound_index = (current_sound_index === 0 ) ? sounds.length - 1 : current_sound_index - 1 ;\r\n\t\tplay_sound(current_sound_index);\r\n\t\tscroll_to_sound();\r\n\t}\r\n\r\n\tfunction next_sound(){\r\n\t\tif(loop === false) current_sound_index = (current_sound_index + 1) % sounds.length;\r\n\t\tif(shuffle === true) current_sound_index = Math.floor(Math.random() * sounds.length);\r\n\t\tplay_sound(current_sound_index);\r\n\t\tscroll_to_sound();\r\n\t}\r\n\r\n\tfunction toggle_shuffle(){\r\n\t\tshuffle = !shuffle;\r\n\t}\r\n\r\n\tfunction toggle_loop(){\r\n\t\tloop = !loop;\r\n\t}\r\n\r\n\tfunction toggle_volume_mute(){\r\n\t\tif(mute === false){\r\n\t\t\tvolume_save = volume;\r\n\t\t\tvolume = 0;\r\n\t\t}else{\r\n\t\t\tvolume = volume_save;\r\n\t\t}\r\n\t\tmute = !mute;\r\n\t}\r\n\r\n\tfunction toggle_viz(){\r\n\t\tif(!audio_ctx) init_audio_context();\r\n\t\tviz = ! viz;\r\n\t}\r\n\r\n\tfunction volume_up(){\r\n\t\tif(volume + 0.1 <= 1) volume += 0.1;\r\n\t}\r\n\r\n\tfunction volume_down(){\r\n\t\tif(volume - 0.1 >= 0) volume -= 0.1;\r\n\t}\r\n\r\n\tfunction format(seconds) {\r\n\t\tif (isNaN(seconds)) return '...';\r\n\t\tconst minutes = Math.floor(seconds / 60);\r\n\t\tseconds = Math.floor(seconds % 60);\r\n\t\tif (seconds < 10) seconds = '0' + seconds;\r\n\t\treturn `${minutes}:${seconds}`;\r\n\t}\r\n\t\r\n\tfunction handleMousemove(e) {\r\n\t\tif (!(e.buttons & 1)) return; // mouse not down\r\n\t\tif (!duration) return; // video not loaded yet\r\n\t\tconst { left, right } = this.getBoundingClientRect();\r\n\t\ttime = duration * (e.clientX - left) / (right - left);\r\n\t}\r\n\r\n\tfunction handleTouchmove(e) {\r\n\t\tif(e.changedTouches.length > 0){\r\n\t\t\tlet theTouch = e.changedTouches[0];\r\n\t\t\ttouch_screenX = theTouch.screenX;\r\n\t\t\ttouch_screenY = theTouch.screenY;\r\n\t\t\ttouch_clientX = theTouch.clientX;\r\n\t\t\ttouch_clientY = theTouch.clientY;\r\n\t\t\ttouch_target = theTouch.target;\r\n\t\t}\r\n\t\tlet mouseEv;\r\n\t\tswitch(e.type)\r\n\t\t{\r\n\t\t\tcase \"touchstart\": mouseEv=\"mousedown\"; break;  \r\n\t\t\tcase \"touchend\":   mouseEv=\"mouseup\"; break;\r\n\t\t\tcase \"touchmove\":  mouseEv=\"mousemove\"; break;\r\n\t\t\tdefault: return;\r\n\t\t}\r\n\t\tlet mouseEvent = new MouseEvent(mouseEv,{ \r\n\t\t\tscreenX: touch_screenX, \r\n\t\t\tscreenY: touch_screenY,\r\n\t\t\tclientX: touch_clientX,\r\n\t\t\tclientY: touch_clientY,\r\n\t\t\tbutton: 0,\r\n\t\t\tbuttons: 1\r\n\t\t});\r\n\t\ttouch_target.dispatchEvent(mouseEvent);\r\n\t\te.preventDefault();\r\n\t}\r\n\r\n\tfunction play_sound(sound_index){\r\n\t\tcurrent_sound_index = sound_index;\r\n\t\taudio.src = folder + \"/\" + sounds[current_sound_index];\r\n\t\taudio.play();\r\n\t}\r\n\r\n\tfunction scroll_to_sound(){\r\n\t\tlet elt = document.getElementById(\"item_\"+current_sound_index);\r\n\t\telt.scrollIntoView({behavior: \"smooth\"});\r\n\t}\r\n</script>\r\n\r\n<div class=\"container\">\r\n\t\r\n\t<div class=\"playlist bg-dark text-light\">\r\n\t\t<div class=\"playlist_items_wrapper\">\r\n\t\t\t<div class=\"playlist_items bg-light text-dark\">\r\n\t\t\t\t{#each sounds as sound, i }\r\n\t\t\t\t\t<div class=\"playlist_item\" id=\"item_{i}\" class:selected={ current_sound_index === i} on:click={() => play_sound(i)}>{i+1}. {sound}</div>\r\n\t\t\t\t{/each}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"player bg-dark\"> \r\n\t\t<audio id=\"audio\"\r\n\t\t\ton:ended={next_sound}\r\n\t\t\tbind:paused \r\n\t\t\tbind:volume \r\n\t\t\tbind:duration\r\n\t\t\tbind:currentTime={time}\r\n\t\t\t></audio>\r\n\t\t{#if viz === true}\r\n\t\t<Visualizer bind:audio_ctx bind:media_source/>\r\n\t\t{/if}\r\n\t\t<div class=\"info text-light\">\r\n\t\t\t<span class=\"time\"><strong>{format(time)} / {format(duration)}</strong> | </span>{current_sound}\r\n\t\t</div>\r\n\t\t<div class=\"progress\">\r\n\t\t\t<progress class=\"bg-light\"\r\n\t\t\t\tvalue=\"{(time / duration) || 0}\"\r\n\t\t\t\ton:mousemove={handleMousemove}\r\n\t\t\t\ton:touchstart={handleTouchmove}\r\n\t\t\t\ton:touchmove={handleTouchmove} \r\n\t\t\t\ton:touchend={handleTouchmove}/>\r\n\t\t</div>\r\n\t\t<div class=\"controls\">\r\n\t\t\t<div class=\"flexbox\">\r\n\t\t\t\t<button title=\"Previous track\" \r\n\t\t\t\t\ton:click={previous_sound}><i class='fas fa-step-backward'></i></button> \r\n\t\t\t\t<button title=\"Play / Pause\"\r\n\t\t\t\t\ton:click={toggle_play_pause}>\r\n\t\t\t\t{#if paused === true}\r\n\t\t\t\t\t<span><i class='fas fa-play'></i></span>\r\n\t\t\t\t{:else}\r\n\t\t\t\t\t<span><i class='fas fa-pause'></i></span>\r\n\t\t\t\t{/if}\r\n\t\t\t\t</button> \r\n\t\t\t\t<button title=\"Stop\"\r\n\t\t\t\t\ton:click={stop}><i class='fas fa-stop'></i></button> \r\n\t\t\t\t<button title=\"Next track\"\r\n\t\t\t\t\ton:click={next_sound}><i class='fas fa-step-forward'></i></button> \r\n\t\t\t</div>\r\n\t\t\t<div class=\"flexbox\">\r\n\t\t\t\t<button title=\"Toggle Shuffle\"\r\n\t\t\t\t\tclass:bg-primary={shuffle} on:click={toggle_shuffle}><i class='fas fa-random'></i></button> \r\n\t\t\t\t<button title=\"Toggle Track Loop\"\r\n\t\t\t\t\tclass:bg-primary={loop} on:click={toggle_loop}><i class='fas fa-redo'></i></button> \r\n\t\t\t\t<button title=\"Mute / Unmute\" class:bg-primary={mute} on:click={toggle_volume_mute}><i class='fas fa-volume-mute'></i></button> \r\n\t\t\t\t<button title=\"Toggle Waveform\" \r\n\t\t\t\t\tclass:bg-primary={viz} on:click={toggle_viz}><i class='fas fa-signal'></i></button> \r\n\t\t\t\t<!-- <button on:click={volume_down}><i class='fas fa-volume-down'></i></button> \r\n\t\t\t\t<button on:click={volume_up}><i class='fas fa-volume-up'></i></button> -->\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>  \r\n</div>\r\n<style>\r\n\t:root{\r\n\t\t--light-color: white;\r\n\t\t--dark-color: #2b2b2b;\r\n\t\t--primary-color: #ff9900;\r\n\t}\r\n\t.text-light{ color: var(--light-color); }\r\n\t.text-dark{ color: var(--dark-color); }\r\n\t.bg-primary, .selected{ background-color: var(--primary-color); }\r\n\t.bg-dark{ background-color: var(--dark-color); }\r\n\t.bg-light{ background-color: var(--light-color); }\r\n\r\n\tbutton{\r\n\t\tbackground-color: var(--dark-color);\r\n\t\tcolor: var(--light-color);\r\n\t}\r\n\r\n\tbutton{\r\n\t\theight: 3.5em;\r\n\t\tcursor: pointer;\r\n\t\tborder: var(--dark-color) 1px solid;\r\n\t\tborder-radius: 0;\r\n\t}\r\n\tbutton:focus{\r\n\t\toutline:none;\r\n\t\tborder: var(--primary-color) 1px solid;\r\n\t}\r\n\tbutton::-moz-focus-inner {\r\n\t\tborder: 0;\r\n\t\tpadding: 1em;\r\n\t}\r\n\t.container{\r\n\t\tdisplay: grid;\r\n\t\theight: 100vh;\r\n\t\tpadding: 0.5em 1em 1em 1em;\r\n\t\tbox-sizing: border-box;\r\n\t\tgrid-template-rows: [row1-start] 1fr [row1-end] auto [last-line];\r\n\t}\r\n\t/* ---- Player ---- */\r\n\t.player{\r\n\t\tpadding: 0em 1em 1em 1em ;\r\n\t\t/* Required for text-overflow to do anything */\r\n\t\tmin-width: 0;\r\n\t}\r\n\t.info{\r\n\t\tpadding-top: 1em;\r\n\t\tpadding-bottom : 2em;\r\n\t\ttext-overflow: ellipsis;\r\n\t\t/* Required for text-overflow to do anything */\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t}\r\n\t.progress{ padding-bottom : 2em; }\r\n\tprogress {\r\n\t\tborder: 0;\r\n\t\tdisplay: block;\r\n\t\twidth: 100%;\r\n\t\theight: 1em;\r\n\t\t-webkit-appearance: none;\r\n\t\tappearance: none;\r\n\t}\r\n\tprogress::-webkit-progress-bar { background-color: var(--light-color); }\r\n\tprogress::-moz-progress-bar { background-color: var(--primary-color); }\r\n\tprogress::-webkit-progress-value { background-color: var(--primary-color); }\r\n   \r\n\t.flexbox{ display:flex; }\r\n\t.flexbox button{ flex: 1 1 0px; }\r\n\r\n\t/* ---- Playlist ---- */\r\n\t.playlist{\r\n\t\toverflow: hidden;\r\n\t\tpadding: 1em;\r\n\t}\r\n\t.playlist_items_wrapper{\r\n\t\theight: 100%;\r\n\t\tmax-height: 100%;\r\n\t\toverflow-y: scroll;\r\n\t\tscrollbar-width: none;\r\n\t\tbackground-color: var(--light-color)\r\n\t}\r\n\t.playlist_items_wrapper::-webkit-scrollbar{ display: none; }\r\n\t.playlist_items{\r\n\t\tmax-height: 100%;\r\n\t\tmin-width: 0;\r\n\t}\r\n\t.playlist_item{\r\n\t\tcursor: pointer;\r\n\t\tpadding: 0.5em;\r\n\t\ttext-overflow: ellipsis;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t@media (max-width: 640px) {\r\n\t\t.container {\r\n\t\t\tpadding: 0;\r\n\t\t}\r\n\t}\r\n</style>",
    "<script>\r\n\timport { onMount, onDestroy } from 'svelte';\r\n\r\n\texport let audio_ctx;\r\n\texport let media_source;\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Visualizations_with_Web_Audio_API\r\n\tconst bg_color = '#2b2b2b';\r\n\tconst stroke_color = '#ff9900';\r\n\tlet viz_index = 0;\r\n\tlet canvas;\r\n\tlet ctx;\r\n\tlet w;\r\n\tlet h;\r\n\tlet analyser;\r\n\tlet draw_visual; \r\n\r\n\tonMount(() => {\r\n\t\tctx = canvas.getContext('2d');\r\n\t\tw = ctx.canvas.width;\r\n\t\th = ctx.canvas.height;\r\n\t\tanalyser = audio_ctx.createAnalyser();\r\n\t\tanalyser.minDecibels = -70;\r\n\t\t//analyser.maxDecibels = -10;\r\n\t\tmedia_source.connect(analyser);\r\n\t\tdraw_viz();\r\n\t});\r\n\r\n\tonDestroy(() => {\r\n\t\tcancelAnimationFrame(draw_visual);\r\n\t\tdraw_visual = undefined;\r\n\t\tmedia_source.disconnect(analyser);\r\n\t});\r\n\r\n\tfunction draw_viz(){\r\n\t\tif(viz_index === 0){\r\n\t\t\tdraw_waveform();\r\n\t\t\tviz_index += 1;\r\n\t\t}else{\r\n\t\t\tdraw_frequencybars();\r\n\t\t\tviz_index = 0;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction draw_waveform(){\r\n\t\tanalyser.fftSize = 2048;\r\n\t\tlet bufferLength = analyser.frequencyBinCount;\r\n\t\tlet dataArray = new Uint8Array(bufferLength);\r\n\t\tanalyser.getByteTimeDomainData(dataArray);\r\n\t\tctx.clearRect(0, 0, w, h);\r\n\t\tfunction draw() {\r\n\t\t\tdraw_visual = requestAnimationFrame(draw);\r\n\t\t\tanalyser.getByteTimeDomainData(dataArray);\r\n\t\t\tctx.fillStyle = bg_color;\r\n\t\t\tctx.fillRect(0, 0, w, h);\r\n\t\t\tctx.lineWidth = 2;\r\n\t\t\tctx.strokeStyle = stroke_color;\r\n\t\t\tctx.beginPath();\r\n\t\t\tlet sliceWidth = w * 1.0 / bufferLength;\r\n\t\t\tlet x = 0;\r\n\t\t\tfor(let i = 0; i < bufferLength; i++) {\r\n\t\t\t\tlet v = dataArray[i] / 128.0 ;\r\n\t\t\t\tlet y = v * h / 2;\r\n\t\t\t\tif(i === 0)\r\n\t\t\t\t\tctx.moveTo(x, y);\r\n\t\t\t\telse\r\n\t\t\t\t\tctx.lineTo(x, y);\r\n\t\t\t\tx += sliceWidth;\r\n\t\t\t}\r\n\t\t\tctx.lineTo(w, h / 2);\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t\tdraw();\r\n\t}\r\n\r\n\tfunction draw_frequencybars(){\r\n\t\tanalyser.fftSize = 64;\r\n\t\tlet bufferLength = analyser.frequencyBinCount;\r\n\t\tlet dataArray = new Uint8Array(bufferLength);\r\n\t\tctx.clearRect(0, 0, w, h);\r\n\r\n\t\tfunction draw() {\r\n\t\t\tdraw_visual = requestAnimationFrame(draw);\r\n\t\t\tanalyser.getByteFrequencyData(dataArray);\r\n\t\t\tctx.fillStyle = bg_color;\r\n\t\t\tctx.fillRect(0, 0, w, h);\r\n\t\t\tlet barWidth = Math.floor((w / bufferLength) * 2);\r\n\t\t\tlet barHeight;\r\n\t\t\tlet x = 0;\r\n\t\t\tfor(var i = 0; i < bufferLength; i++) {\r\n\t\t\t\tbarHeight = dataArray[i] / 2;\r\n\t\t\t\tctx.fillStyle = 'rgb(' + (barHeight + 100) + ',100,00)';\r\n\t\t\t\tctx.fillRect(x,h - barHeight, barWidth, barHeight);\r\n\t\t\t\tx += barWidth + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tdraw();\r\n\t}\r\n</script>\r\n\t<canvas bind:this={canvas} on:click={draw_viz}></canvas>\r\n<style>\r\n\tcanvas{\r\n\t\tmargin-bottom: 0.5em;\r\n\t\twidth: 100%;\r\n\t\theight: 6em;\r\n\t}\r\n</style>"
  ],
  "names": [],
  "mappings": "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"
}